---
import type { GetStaticPaths } from "astro";
import type { PokemonList } from "../../interfaces/pokemon-list";
import {Icon} from 'astro-icon/components';
import MainLayout from "../../layouts/MainLayout.astro";
import  PokemonCard from "../../components/pokemons/PokemonCard.astro";
import Title from "@/components/shared/Title.astro";


export const getStaticPaths = (async() => {

    const response = await fetch('https://pokeapi.co/api/v2/pokemon?limit=151');
    const {results} = await response.json() as PokemonList;
    
    //retorno de rutas estaticas  de manera dinamica
    return results.map(({name,url}) => ({//desestructurar  los datos que se necesitan para evitas sintaxis confusa
        params: {
            name//esto podria ser name:name o name: pokemon.name
        },
        props: {
            url//esto podria ser ulr:url o url: pokemon.url
        }
    }))
}) satisfies GetStaticPaths;


const {name} = Astro.params;
const {url} = Astro.props;

//Construir las rutas
const id = url.split("/").at(-2);
const urlimg = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;
const auidioSource = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`

---

<MainLayout title=`Pokemon - #${id} ${name}` description=`Informacion sobre el pokemon ${name}` image=`${urlimg}` >

    <section class="pt-10 mx-10 flex flex-col justify-center items-center">
        <div class="justify-center items-center">
            <button onclick="history.back()" class="text-slate-50 text-2xl font-medium bg-gradient-to-r from-neutral-200/10 via-red-300/40 to-orange-600/30 rounded-md px-4 py-2">Regresar</button>

            <div class="flex flex-row items-center">
                
                <Title>{name}</Title>

                <button id="btn-favorite" class="mx-4 hover:scale-105 transition-all duration-200" data-name={name} data-id={id}>
                    <Icon data-outline name="NoLike" size={50} />
                    <Icon data-full class="hidden" name="Like" size={50} />
                </button>

            </div>

            <PokemonCard 
            name={name} 
            url={url}
            isBig
            />
            <div class="flex  justify-center">
                <audio controls class="mt-5" >
                    <source src={auidioSource} type="audio/ogg">
                    Tu navegador no soporta el elemento <code>audio</code>.
                </audio>
            </div>
            

        </div>
    </section>
   
</MainLayout>

<script>
    interface IFavoritePokemon {
        name: string;
        id: number;
    }
    let favoritePokemons: IFavoritePokemon[] = JSON.parse(
      localStorage.getItem('favorites') ?? '[]'
    );

   

    const handlePageLoad = () => {
       
        const btnFavorite = document.querySelector(
            '#btn-favorite'
        ) as HTMLButtonElement;

        if (!btnFavorite) return;

        const name = btnFavorite.dataset.name ?? '';
        const id = btnFavorite.dataset.id ?? '';

        const pokeBallOutline = document.querySelector(
            '[data-outline]'
        ) as HTMLElement;

        const pokeBallFull = document.querySelector(
            '[data-full]'
        ) as HTMLElement;


        const isFavorite = favoritePokemons.some((fav) => fav.name === name);
        if (isFavorite) {
            pokeBallOutline.classList.toggle('hidden');
            pokeBallFull.classList.toggle('hidden');
        }

        btnFavorite.addEventListener('click', () => {
            
            pokeBallOutline.classList.toggle('hidden');
            pokeBallFull.classList.toggle('hidden');

            toggleFavorite(); 
            
        });
        
        const toggleFavorite = () => {
        const isFavorite = favoritePokemons.some((fav) => fav.name === name);
        if (isFavorite) {
            //remover pokemon
            favoritePokemons = favoritePokemons.filter(
                (fav) => fav.name !== name 
            )
        }else{
            //agregar pokemon
            favoritePokemons.push({ 
                id: +id,
                name: name
                
            });
        }

        localStorage.setItem('favorites', JSON.stringify(favoritePokemons));
    }

    };
  
    document.addEventListener('astro:page-load', handlePageLoad);
  </script>
  